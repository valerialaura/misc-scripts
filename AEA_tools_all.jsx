/* Collection of Tools to use in other scripts *//*     JSON SUPPORT */// json2.js minified version"object"!=typeof JSON&&(JSON={}),function(){"use strict";function f(t){return 10>t?"0"+t:t}function this_value(){return this.valueOf()}function quote(t){return rx_escapable.lastIndex=0,rx_escapable.test(t)?'"'+t.replace(rx_escapable,function(t){var e=meta[t];return"string"==typeof e?e:"\\u"+("0000"+t.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+t+'"'}function str(t,e){var r,n,o,u,f,a=gap,i=e[t];switch(i&&"object"==typeof i&&"function"==typeof i.toJSON&&(i=i.toJSON(t)),"function"==typeof rep&&(i=rep.call(e,t,i)),typeof i){case"string":return quote(i);case"number":return isFinite(i)?i+"":"null";case"boolean":case"null":return i+"";case"object":if(!i)return"null";if(gap+=indent,f=[],"[object Array]"===Object.prototype.toString.apply(i)){for(u=i.length,r=0;u>r;r+=1)f[r]=str(r,i)||"null";return o=0===f.length?"[]":gap?"[\n"+gap+f.join(",\n"+gap)+"\n"+a+"]":"["+f.join(",")+"]",gap=a,o}if(rep&&"object"==typeof rep)for(u=rep.length,r=0;u>r;r+=1)"string"==typeof rep[r]&&(n=rep[r],o=str(n,i),o&&f.push(quote(n)+(gap?": ":":")+o));else for(n in i)Object.prototype.hasOwnProperty.call(i,n)&&(o=str(n,i),o&&f.push(quote(n)+(gap?": ":":")+o));return o=0===f.length?"{}":gap?"{\n"+gap+f.join(",\n"+gap)+"\n"+a+"}":"{"+f.join(",")+"}",gap=a,o}}var rx_one=/^[\],:{}\s]*$/,rx_two=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,rx_three=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,rx_four=/(?:^|:|,)(?:\s*\[)+/g,rx_escapable=/[\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,rx_dangerous=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;"function"!=typeof Date.prototype.toJSON&&(Date.prototype.toJSON=function(){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null},Boolean.prototype.toJSON=this_value,Number.prototype.toJSON=this_value,String.prototype.toJSON=this_value);var gap,indent,meta,rep;"function"!=typeof JSON.stringify&&(meta={"\b":"\\b","	":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},JSON.stringify=function(t,e,r){var n;if(gap="",indent="","number"==typeof r)for(n=0;r>n;n+=1)indent+=" ";else"string"==typeof r&&(indent=r);if(rep=e,e&&"function"!=typeof e&&("object"!=typeof e||"number"!=typeof e.length))throw Error("JSON.stringify");return str("",{"":t})}),"function"!=typeof JSON.parse&&(JSON.parse=function(text,reviver){function walk(t,e){var r,n,o=t[e];if(o&&"object"==typeof o)for(r in o)Object.prototype.hasOwnProperty.call(o,r)&&(n=walk(o,r),void 0!==n?o[r]=n:delete o[r]);return reviver.call(t,e,o)}var j;if(text+="",rx_dangerous.lastIndex=0,rx_dangerous.test(text)&&(text=text.replace(rx_dangerous,function(t){return"\\u"+("0000"+t.charCodeAt(0).toString(16)).slice(-4)})),rx_one.test(text.replace(rx_two,"@").replace(rx_three,"]").replace(rx_four,"")))return j=eval("("+text+")"),"function"==typeof reviver?walk({"":j},""):j;throw new SyntaxError("JSON.parse")})}();/*     HTTP REQUEST SUPPORT     Used for version checking*/// HTTP get responsefunction HTTPFile (url,port) {  if (arguments.length == 1) {    url = arguments[0];    port = 80;  };  this.url = url;  this.port = port;  this.httpPrefix = this.url.match(/http:\/\//);  this.domain = this.httpPrefix == null ? this.url.split("/")[0]+":"+this.port :this.url.split("/")[2]+":"+this.port;  this.call = "GET "+ (this.httpPrefix == null ? "http://"+this.url : this.url)+" HTTP/1.0\r\nHost:" +(this.httpPrefix == null ? this.url.split("/")[0] :this.url.split("/")[2])+"\r\nConnection: close\r\n\r\n";  this.reply = new String();  this.conn = new Socket();  this.conn.encoding = "binary";  HTTPFile.prototype.getFile = function(f) {    var typeMatch = this.url.match(/(\.)(\w{3,4}\b)/g);    if (this.conn.open(this.domain,"binary")) {              this.conn.write(this.call);              this.reply = this.conn.read(9999999999);              this.conn.close();    } else {              this.reply = "";    }    return this.reply.substr(this.reply.indexOf("\r\n\r\n")+4);  };}/*     STRING PROTOTYPES    startsWith    endsWith    contains    getExtension    getBasename    trim    */    if (typeof String.prototype.startsWith != 'function') {      String.prototype.startsWith = function (str){        return this.indexOf(str) == 0;      };    }    if (typeof String.prototype.endsWith != 'function') {      String.prototype.endsWith = function (str){        return this.slice(-str.length) == str;      };    }        if (typeof String.prototype.contains != 'function') {      String.prototype.contains = function (str){        return this.indexOf(str) !== -1;      };    }    if (typeof String.prototype.getExtension != 'function') {      String.prototype.getExtension = function (){        var dotP = this.lastIndexOf('.')+1;        return !dotP ? false : dotP !== this.length ? this.substr(dotP) : '';      };    }    if (typeof String.prototype.getBasename != 'function') {      String.prototype.getBasename = function (){        var dotP = this.lastIndexOf('.');        if (dotP == -1) {            return this;        } else if (dotP !== this.length) {            return this.substr(0,dotP);        } else {            return this;        }      };    }    if (typeof String.prototype.trim != 'function') {        String.prototype.trim = function() {            return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');        };    }/*     COLOR CONVERSION     stringToRGB    RGBToString    HexToColor    */function stringToRGB (theString) {    // we assume a comma separated string, just because of course...    var tmp = theString.split(",");    var r = tmp[0]? tmp[0]:0;    var g = tmp[1]? tmp[1]:0;    var b = tmp[2]? tmp[2]:0;    return [r/255,g/255,b/255];}function RGBToString (theRGB) {    for (var i = 0; i < theRGB.length; i++){        theRGB[i] = Math.round(theRGB[i]*255);    }    return theRGB.toString();}function hexToColor (theHex) {      theHex = parseInt(theHex,16);            var r = theHex >> 16;      var g = (theHex & 0x00ff00) >> 8;      var b = theHex & 0xff;      return [r/255,g/255,b/255];    }function changeSolidColor (elem,color) {   elem.mainSource.color = color;   }/*    COMPOSITION AND PROJECT UTILS    createCompFromComp    searchInFolder    projectItemSearch    projectItemSearchVec    itemSearch    itemSearchVec    */function createCompFromComp (myComp, myName) {     try{        var newComp;        newComp = app.project.items.addComp(myName, myComp.width, myComp.height, 1, myComp.duration, myComp.frameRate);        newComp.layers.add(myComp);     //Adds file to comp        return newComp;    } catch(err){       // alert("Error at line# " + err.line.toString() + "\r" + err.toString());       return null;    }}function searchInFolder (name, folderName) {    var myElem = null; // assume the worst    currFolder = projectItemSearch(folderName,"folder");    if (!currFolder) return false;    for (var i = 1; i <= currFolder.numItems; i++) {        myElem = currFolder.items[i];        if ((myElem.name === name) && (myElem instanceof CompItem)) return myElem;    }    return false;}function projectItemSearch (name, type) {    var items = app.project.items;    var result = itemSearchVec(items, name, type);    return result[0];}function itemSearch(items,name, type) {    var result = itemSearchVec(items, name, type);    return result[0];}function itemSearchVec(items,name, type) {    if ( (type == "") || (type == null) ) {        type = "comp";    }    if ( (items == undefined) || (items == null) ) items = app.project.items;    var result = [];    for (var i = 1; i <= items.length; i++){      myElem = items[i];      if (myElem.name === name) {        switch(type) {            case "solid":                if ( (myElem.mainSource != null) && (myElem.mainSource != undefined) && (myElem.mainSource instanceof SolidSource) ) {                    result.push(myElem);                }                break;            case "comp":                if (myElem instanceof CompItem) result.push(myElem);                break;            case "folder":                if (myElem instanceof FolderItem) result.push(myElem);                break;            }        }    }    return result;}function projectItemSearchVec(name, type) {    var items = app.project.items;    return itemSearchVec(items, name, type);}/*    MISC    getCount    getMarkerTime    */function getCount(name) {    // find digits at the end of the name    var found = name.match("\\d+$");    if (found != null) {        // found number(s)        return parseInt(name.substr(found.index, name.length))    } else return null;}function getMarkerTime (comp, name) {    var result = -1;    //if (parseFloat(app.version) >= 14) {    // 2017 or up    try {        // only valid if (parseFloat(app.version) >= 14)        result = comp.markerProperty.keyTime(name);        }    finally {        if (result == -1) {            // will get here if version < 14 or no comp markers found            var l = comp.layers.byName("MARKERS");            if (l != null) {                try {                    result = l.property("Marker").keyTime(name);                    }                finally {                    return result;                    }            } else return result;        }        return result;    }}/*    LAYER UTILS    resetProperties    reset    */function reset (p, def) {   if (p.isModified){      if (p.expression!=="") p.expression = "";      while (p.numKeys>0) p.removeKey(1);      p.setValue(def);   };   return;}function resetProperties (comp, layer) {    L = layer;    D3 = L.threeDLayer;        // default scale is [100,100,100]    reset(L.transform.scale, [100,100,100]);        // default rotation is 0, orientation is [0,0,0]    if (D3) {        reset(L.transform.xRotation, 0);        reset(L.transform.yRotation, 0);        reset(L.transform.zRotation, 0);    } else{        reset(L.transform.rotation, 0);    }    // orientation    if (D3){        reset(L.transform.orientation, [0,0,0]);    }    // default anchor point is centered in layer    def = L.source ? [L.width/2, L.height/2, 0] : [0,0,0];    reset(L.transform.anchorPoint, def);        // default position is centered in comp    def = L.parent ? [0,0,0] : [comp.width/2,comp.height/2, 0];    if (L.transform.position.dimensionsSeparated) {        reset(L.transform.xPosition, def[0]);        reset(L.transform.yPosition, def[1]);        if (D3) reset(L.transform.zPosition, def[2]);    } else {        reset(L.transform.position, def);    }    // default opacity is 100    reset(L.transform.opacity, [100]);}/*    OUTPUT MODULE UTILS    getOutputModuleTemplateNames    OutputModuleExists    */function getOutputModuleTemplateNames()  {      var currentOMName;      var OMStringsPrefSection = "Output Module Spec Strings Section v28";      var OMStringsKeyPrefix = "Output Module Spec Strings Name ";      var hiddenPrefixRE = /_HIDDEN/;      var OMList = new Array();      for(var i = 0; app.preferences.havePref(OMStringsPrefSection, OMStringsKeyPrefix+i, PREFType.PREF_Type_MACHINE_INDEPENDENT_OUTPUT); i++)  {          currentOMName = app.preferences.getPrefAsString(OMStringsPrefSection, OMStringsKeyPrefix+i, PREFType.PREF_Type_MACHINE_INDEPENDENT_OUTPUT);          if(currentOMName.match(hiddenPrefixRE)==null) OMList.push(currentOMName);      }      return OMList;  }function OutputModuleExists (_omname) {    var omList = getOutputModuleTemplateNames();    var found = -1;    for (var i=0;i<omList.length;i++) {        if (omList[i] == _omname) {            found = i;            break;        }    }    return found;}//// END INCLUDE TOOLS